import java.util.List;
import java.util.ArrayList;
import java.util.List;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;


class ColumnScanner {
    public String getUnderNodeAsString(List<String> elementsToScan, int widthIndex, int heightIndex){

        for(int a = (heightIndex + 1) ; a < elementsToScan.size() ; a++){
            try{
                if(elementsToScan.get(a).charAt(widthIndex) == '0') return "" + widthIndex + " " + a;
            }catch (Exception e){
                return "-1 -1";
            }
        }

        return "-1 -1";
    }
}


class Game {

    public List<String> play(Player player){
        List<String> elementsToPrint = new ArrayList<>();
        LineScanner lineScanner = new LineScanner();
        ColumnScanner columnScanner = new ColumnScanner();

        for(int height = 0 ; height < player.height ; height++){
            for(int width = 0 ; width < player.width ; width++){
                if(isNode(height, width, player)){
                    String elementToPrint = (width + " " + height);
                    elementToPrint += " ";

                    elementToPrint += lineScanner.getRightNodeAsString(player.elements.get(height), width, height);

                    elementToPrint += " ";

                    elementToPrint += columnScanner.getUnderNodeAsString(player.elements, width, height);

                    elementsToPrint.add(elementToPrint);
                }
            }
        }

        return elementsToPrint;
    }

    private boolean isNode(int height, int width, Player player){
        return player.elements.get(height).charAt(width) == '0';
    }
}

class LineScanner {

    public String getRightNodeAsString(String element, int index, int heightIndex){
        String[] elementsToScan = element.substring(index).split("");

        for(int a = 1 ; a < elementsToScan.length ; a++){
            if(elementsToScan[a].equals("0")) return "" + (index + a) + " " + heightIndex;
        }

        return "-1 -1";

    }
}


/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Player {
    List<String> elements;
    int width;
    int height;

    public Player(){}

    public static void main(String args[]) {
        Game game = new Game();
        Scanner in = new Scanner(System.in);

        int width = in.nextInt(); // the number of cells on the X axis
        int height = in.nextInt(); // the number of cells on the Y axis
        System.err.println("width: " + width);
        System.err.println("height: " + height);

        if (in.hasNextLine()) {
            in.nextLine();
        }

        Player player = new Player();
        player.width = width;
        player.height = height;
        player.elements = new ArrayList<>();

        for (int i = 0; i < height; i++) {
            player.elements.add(in.nextLine());
        }


        System.err.println("player.elements: " + player.elements);

        game.play(player).forEach(System.out::println);
    }
}
